<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.heima.dao.CmfCommentsMapper" >
  <resultMap id="BaseResultMap" type="cn.heima.pojo.CmfComments" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="post_table" property="postTable" jdbcType="VARCHAR" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="to_uid" property="toUid" jdbcType="INTEGER" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="SMALLINT" />
    <result column="parentid" property="parentid" jdbcType="BIGINT" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="SMALLINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.heima.pojo.CmfComments" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, post_table, post_id, url, uid, to_uid, full_name, email, createtime, type, parentid, 
    path, status
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.heima.pojo.CmfCommentsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cmf_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.heima.pojo.CmfCommentsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cmf_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cmf_comments
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cmf_comments
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.heima.pojo.CmfCommentsExample" >
    delete from cmf_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.heima.pojo.CmfComments" >
    insert into cmf_comments (id, post_table, post_id, 
      url, uid, to_uid, full_name, 
      email, createtime, type, 
      parentid, path, status, 
      content)
    values (#{id,jdbcType=BIGINT}, #{postTable,jdbcType=VARCHAR}, #{postId,jdbcType=INTEGER}, 
      #{url,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, #{toUid,jdbcType=INTEGER}, #{fullName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{type,jdbcType=SMALLINT}, 
      #{parentid,jdbcType=BIGINT}, #{path,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.heima.pojo.CmfComments" >
    insert into cmf_comments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="postTable != null" >
        post_table,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="toUid != null" >
        to_uid,
      </if>
      <if test="fullName != null" >
        full_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="postTable != null" >
        #{postTable,jdbcType=VARCHAR},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        #{toUid,jdbcType=INTEGER},
      </if>
      <if test="fullName != null" >
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=BIGINT},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.heima.pojo.CmfCommentsExample" resultType="java.lang.Integer" >
    select count(*) from cmf_comments
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cmf_comments
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.postTable != null" >
        post_table = #{record.postTable,jdbcType=VARCHAR},
      </if>
      <if test="record.postId != null" >
        post_id = #{record.postId,jdbcType=INTEGER},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.toUid != null" >
        to_uid = #{record.toUid,jdbcType=INTEGER},
      </if>
      <if test="record.fullName != null" >
        full_name = #{record.fullName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.parentid != null" >
        parentid = #{record.parentid,jdbcType=BIGINT},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update cmf_comments
    set id = #{record.id,jdbcType=BIGINT},
      post_table = #{record.postTable,jdbcType=VARCHAR},
      post_id = #{record.postId,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      to_uid = #{record.toUid,jdbcType=INTEGER},
      full_name = #{record.fullName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=SMALLINT},
      parentid = #{record.parentid,jdbcType=BIGINT},
      path = #{record.path,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=SMALLINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cmf_comments
    set id = #{record.id,jdbcType=BIGINT},
      post_table = #{record.postTable,jdbcType=VARCHAR},
      post_id = #{record.postId,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      to_uid = #{record.toUid,jdbcType=INTEGER},
      full_name = #{record.fullName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=SMALLINT},
      parentid = #{record.parentid,jdbcType=BIGINT},
      path = #{record.path,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.heima.pojo.CmfComments" >
    update cmf_comments
    <set >
      <if test="postTable != null" >
        post_table = #{postTable,jdbcType=VARCHAR},
      </if>
      <if test="postId != null" >
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        to_uid = #{toUid,jdbcType=INTEGER},
      </if>
      <if test="fullName != null" >
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=BIGINT},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.heima.pojo.CmfComments" >
    update cmf_comments
    set post_table = #{postTable,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      to_uid = #{toUid,jdbcType=INTEGER},
      full_name = #{fullName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=SMALLINT},
      parentid = #{parentid,jdbcType=BIGINT},
      path = #{path,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.heima.pojo.CmfComments" >
    update cmf_comments
    set post_table = #{postTable,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      to_uid = #{toUid,jdbcType=INTEGER},
      full_name = #{fullName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=SMALLINT},
      parentid = #{parentid,jdbcType=BIGINT},
      path = #{path,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>